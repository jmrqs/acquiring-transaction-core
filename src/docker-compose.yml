networks:
  backend:

services:
  acquiringtransactioncoreaccountdb:
    container_name: acquiringtransactioncoreaccountdb
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=@qu1r1ngtr@ns@ct10nc0r3
    networks:
      - backend
    ports:
      - 18001:1433
    volumes:
      - ./.containers/database:/var/opt/mssql/data

  seedacquiringtransactioncoreaccountdb:
    image: mcr.microsoft.com/mssql-tools
    depends_on:
      - acquiringtransactioncoreaccountdb
    entrypoint:
      - /bin/bash
      - -c
      - |
        if [ "$ENVIRONMENT" = "Development" ]; then
          echo "Development environment detected. Running seed script..."

          echo "Waiting for SQL Server to be available..."
          while ! /opt/mssql-tools/bin/sqlcmd -S acquiringtransactioncoreaccountdb -U sa -P "@qu1r1ngtr@ns@ct10nc0r3" -Q "SELECT 1" > /dev/null 2>&1; do
            echo "SQL Server is unavailable - sleeping 2 seconds"
            sleep 2
          done

          echo "Running seed script..."
          /opt/mssql-tools/bin/sqlcmd -S acquiringtransactioncoreaccountdb -U sa -P "@qu1r1ngtr@ns@ct10nc0r3" -i /db/seed-mssql.sql
        else
          echo "Not development environment. Skipping seed script."
          sleep infinity
        fi
    volumes:
      - ../db/seed-mssql.sql:/db/seed-mssql.sql

    networks:
      - backend

  webapi:
    container_name: acquiring-transaction-core-webapi
    image: ${DOCKER_REGISTRY-}webapi
    networks:
      - backend
    build:
      context: .
      dockerfile: Host/WebApi/Dockerfile
    environment:
      - DB_HOST=acquiringtransactioncoreaccountdb
      - DB_NAME=acquiringtransactioncoreaccount
      - DB_SA_PASSWORD=@qu1r1ngtr@ns@ct10nc0r3
    ports:
      - 8080:8080

  acquiring-transaction-core-mq:
    image: rabbitmq:3.11.7-management
    container_name: acquiring-transaction-core-mq
    hostname: acquiring-transaction-core-queue
    volumes:
      - ./.containers/queue/data/:/var/lib/rabbitmq
      - ./.containers/queue/log/:/var/log/rabbitmq
    environment:
        RABBITMQ_DEFAULT_USER: guest
        RABBITMQ_DEFAULT_PASS: guest
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - backend

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - backend

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    networks:
      - backend